From 73f54fdbaa4f7d7a85ecbd5bef1996b9fe2242f7 Mon Sep 17 00:00:00 2001
From: Gerson Fernando Budke <nandojve@gmail.com>
Date: Tue, 16 Feb 2016 13:37:05 -0200
Subject: [PATCH 7/9] rtl817xdrv: Fix bsd driver support

Signed-off-by: Gerson Fernando Budke <nandojve@gmail.com>
---
 src/drivers/driver_bsd.c | 80 ++++++++++++++++--------------------------------
 1 file changed, 27 insertions(+), 53 deletions(-)

diff --git a/src/drivers/driver_bsd.c b/src/drivers/driver_bsd.c
index 386702c..0af2bbd 100644
--- a/src/drivers/driver_bsd.c
+++ b/src/drivers/driver_bsd.c
@@ -971,31 +971,6 @@ static struct hostapd_hw_modes *rtw_get_hw_feature_data_ops(
 	modes[2].rates[6] = 480;
 	modes[2].rates[7] = 540;
 
-
-	//
-#if 0
-#define HT_CAP_INFO_LDPC_CODING_CAP		((u16) BIT(0))
-#define HT_CAP_INFO_SUPP_CHANNEL_WIDTH_SET	((u16) BIT(1))
-#define HT_CAP_INFO_SMPS_MASK			((u16) (BIT(2) | BIT(3)))
-#define HT_CAP_INFO_SMPS_STATIC			((u16) 0)
-#define HT_CAP_INFO_SMPS_DYNAMIC		((u16) BIT(2))
-#define HT_CAP_INFO_SMPS_DISABLED		((u16) (BIT(2) | BIT(3)))
-#define HT_CAP_INFO_GREEN_FIELD			((u16) BIT(4))
-#define HT_CAP_INFO_SHORT_GI20MHZ		((u16) BIT(5))
-#define HT_CAP_INFO_SHORT_GI40MHZ		((u16) BIT(6))
-#define HT_CAP_INFO_TX_STBC			((u16) BIT(7))
-#define HT_CAP_INFO_RX_STBC_MASK		((u16) (BIT(8) | BIT(9)))
-#define HT_CAP_INFO_RX_STBC_1			((u16) BIT(8))
-#define HT_CAP_INFO_RX_STBC_12			((u16) BIT(9))
-#define HT_CAP_INFO_RX_STBC_123			((u16) (BIT(8) | BIT(9)))
-#define HT_CAP_INFO_DELAYED_BA			((u16) BIT(10))
-#define HT_CAP_INFO_MAX_AMSDU_SIZE		((u16) BIT(11))
-#define HT_CAP_INFO_DSSS_CCK40MHZ		((u16) BIT(12))
-#define HT_CAP_INFO_PSMP_SUPP			((u16) BIT(13))
-#define HT_CAP_INFO_40MHZ_INTOLERANT		((u16) BIT(14))
-#define HT_CAP_INFO_LSIG_TXOP_PROTECT_SUPPORT	((u16) BIT(15))
-#endif
-
 	//HOSTAPD_MODE_IEEE80211G
 	modes[0].ht_capab = HT_CAP_INFO_SUPP_CHANNEL_WIDTH_SET|HT_CAP_INFO_SHORT_GI20MHZ|
 			HT_CAP_INFO_SHORT_GI40MHZ|HT_CAP_INFO_MAX_AMSDU_SIZE|HT_CAP_INFO_DSSS_CCK40MHZ;
@@ -1027,33 +1002,6 @@ fail:
 
 }
 
-#if 0
-#define 	IEEE80211_FC0_TYPE_MASK   0x0c
-#define 	IEEE80211_FC0_TYPE_SHIFT   2
-#define 	IEEE80211_FC0_TYPE_MGT   0x00
-#define 	IEEE80211_FC0_TYPE_CTL   0x04
-#define 	IEEE80211_FC0_TYPE_DATA   0x08
-#define 	IEEE80211_FC0_SUBTYPE_MASK   0xf0
-#define 	IEEE80211_FC0_SUBTYPE_SHIFT   4
-#define 	IEEE80211_FC0_SUBTYPE_ASSOC_REQ   0x00
-#define 	IEEE80211_FC0_SUBTYPE_ASSOC_RESP   0x10
-#define 	IEEE80211_FC0_SUBTYPE_REASSOC_REQ   0x20
-#define 	IEEE80211_FC0_SUBTYPE_REASSOC_RESP   0x30
-#define 	IEEE80211_FC0_SUBTYPE_PROBE_REQ   0x40
-#define 	IEEE80211_FC0_SUBTYPE_PROBE_RESP   0x50
-#define 	IEEE80211_FC0_SUBTYPE_BEACON   0x80
-#define 	IEEE80211_FC0_SUBTYPE_ATIM   0x90
-#define 	IEEE80211_FC0_SUBTYPE_DISASSOC   0xa0
-#define 	IEEE80211_FC0_SUBTYPE_AUTH   0xb0
-#define 	IEEE80211_FC0_SUBTYPE_DEAUTH   0xc0
-#define 	IEEE80211_FC0_SUBTYPE_ACTION   0xd0
-#define 	IEEE80211_FC0_SUBTYPE_ACTION_NOACK   0xe0
-
-#define IEEE80211_APPIE_WPA (IEEE80211_FC0_TYPE_MGT | IEEE80211_FC0_SUBTYPE_BEACON | \
-         IEEE80211_FC0_SUBTYPE_PROBE_RESP)
-
-#endif
-
 #define RTW_IEEE80211_APPIE_BEACON (IEEE80211_FC0_TYPE_MGT|IEEE80211_FC0_SUBTYPE_BEACON)
 #define RTW_IEEE80211_APPIE_PROBE_RESP (IEEE80211_FC0_TYPE_MGT|IEEE80211_FC0_SUBTYPE_PROBE_RESP)
 #define RTW_IEEE80211_APPIE_ASSOC_RESP (IEEE80211_FC0_TYPE_MGT|IEEE80211_FC0_SUBTYPE_ASSOC_RESP)
@@ -1150,6 +1098,14 @@ bsd_init(struct hostapd_data *hapd, struct wpa_init_params *params)
 		goto bad;
 	}
 
+#ifdef CONFIG_SUPPORT_RTW_DRIVER
+	if(!strncmp(hapd->iconf->driver->name, "rtl871xdrv", 10))
+	{
+		if (bsd_ctrl_iface(drv, 1) < 0)
+			goto bad;
+	}
+#endif
+
 	return drv;
 bad:
 	if (drv->sock_xmit != NULL)
@@ -1588,6 +1544,20 @@ wpa_driver_bsd_event_receive(int sock, void *ctx, void *sock_ctx)
 				   event.interface_status.ifname);
 			wpa_supplicant_event(ctx, EVENT_INTERFACE_STATUS, &event);
 		}
+#ifdef CONFIG_SUPPORT_RTW_DRIVER
+		else{
+			struct hostapd_data *hapd = drv->hapd;
+			if(!strncmp(hapd->iconf->driver->name, "rtl871xdrv", 10))
+			{
+				os_strlcpy(event.interface_status.ifname,
+				   drv->ifname, sizeof(event.interface_status.ifname));
+				event.interface_status.ievent = EVENT_INTERFACE_ADDED;
+				wpa_printf(MSG_DEBUG, "RTM_IFINFO: Interface '%s' UP",
+				   event.interface_status.ifname);
+				wpa_supplicant_event(ctx, EVENT_INTERFACE_STATUS, &event);
+			}
+		}
+#endif
 		break;
 	}
 }
@@ -1905,7 +1875,6 @@ wpa_driver_bsd_get_capa(void *priv, struct wpa_driver_capa *capa)
 }
 #endif /* HOSTAPD */
 
-
 const struct wpa_driver_ops wpa_driver_bsd_ops = {
 	.name			= "bsd",
 	.desc			= "BSD 802.11 support",
@@ -1920,6 +1889,11 @@ const struct wpa_driver_ops wpa_driver_bsd_ops = {
 	.sta_deauth		= bsd_sta_deauth,
 	.sta_set_flags		= bsd_set_sta_authorized,
 	.commit			= bsd_commit,
+#ifdef CONFIG_SUPPORT_RTW_DRIVER
+	.get_hw_feature_data = rtw_get_hw_feature_data_ops,
+	.set_beacon = rtw_set_beacon_ops,
+	.set_ap_wps_ie = rtw_set_ap_wps_ie_ops,
+#endif
 #else /* HOSTAPD */
 	.init			= wpa_driver_bsd_init,
 	.deinit			= wpa_driver_bsd_deinit,
-- 
1.9.1

