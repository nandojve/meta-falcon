# Use O.S. Systems Embedded Linux as base
require conf/distro/oel.conf

### Specific settings

DISTRO = "falcon"
DISTRO_NAME = "Peregrine Falcon Platform"
SDK_VENDOR = "-falconsdk"
SDK_VERSION := "${@'${DISTRO_VERSION}'.replace('snapshot-${DATE}','snapshot')}"

TARGET_VENDOR = "-falcon"
QEMU_TARGETS = "arm aarch64 i386 x86_64 ppc ppc64"

# Valgrind Options
PTEST_ENABLED_pn-valgrind = "0"

# intramfs instructions
INITRAMFS_IMAGE = "falcon-image-initramfs"
INITRAMFS_IMAGE_BUNDLE ?= "1"
INITRAMFS_MAXSIZE = "262144"
INITRAMFS_FSTYPES ?= "cpio.gz"

# live image instructions
INITRD_IMAGE_LIVE = "${INITRAMFS_IMAGE}"

# WIC instructions
WKS_FILE = "falcon-image.wks"

# Default Mono version
PREFERRED_VERSION_mono = "4.2.3.4"
PREFERRED_VERSION_mono-native = "4.2.3.4"

# Default NGINX version
PREFERRED_VERSION_nginx = "1.11.5"

# Default init system
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = ""

# Default net-snmp manager
VIRTUAL-RUNTIME_snmp-manager = "net-snmp-server"

# zeroconf is necessary to enable avahi
FALCON_DEFAULT_DISTRO_FEATURES = "\
    argp \
    ext2 \
    largefile \
    nfs \
    ptest \
    usbgadget \
    usbhost \
    wifi \
    xattr \
    ipsec \
    pam \
    systemd \
    snmp \
    pci \
    ${@bb.utils.contains('MACHINE_FEATURES', 'falcon-cpe falcon-nas', 'zeroconf', '',d)} \
    ${@bb.utils.contains('MACHINE_FEATURES', 'falcon-virt', 'virtualization', '',d)} \
"

DISTRO_FEATURES = "\
    ${DISTRO_FEATURES_LIBC} \
    ${FALCON_DEFAULT_DISTRO_FEATURES} \
"

DISTRO_FEATURES_BACKFILL_CONSIDERED = "\
    pulseaudio \
    sysvinit \
"

BAD_RECOMMENDATIONS += "busybox busybox-syslog busybox-udhcpc"

# Default TIMEZONE & LOCALE
GLIBC_GENERATE_LOCALES = "\
    en_US en_US.UTF-8 \
    en_GB en_GB.UTF-8 \
    pt_BR pt_BR.UTF-8 \
    pt_PT pt_PT.UTF-8 \
    es_ES es_ES.UTF-8 \
    es_AR es_AR.UTF-8 \
    es_MX es_MX.UTF-8 \
"

IMAGE_LINGUAS = "\
    en-us \
    en-gb \
    pt-br \
    es-es \
    es-ar \
    es-mx \
"

DEFAULT_TIMEZONE="America/Sao_Paulo"

# Default licenses whitelist
LICENSE_FLAGS_WHITELIST = "commercial_ffmpeg commercial_x264"

# To easy the upgrade for morty-based system, the GCC has been fixed
# for 6.x based release.
GCCVERSION = "6.%"
